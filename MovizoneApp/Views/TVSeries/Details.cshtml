@model MovizoneApp.DTOs.TVSeriesDto
@{
    ViewData["Title"] = Model.Title;
    var seasons = Model.Episodes.GroupBy(e => e.SeasonNumber).OrderBy(g => g.Key).ToList();
}

<!-- details -->
<section class="section section--details">
	<!-- details content -->
	<div class="container">
		<div class="row">
			<!-- title -->
			<div class="col-12">
				<h1 class="section__title section__title--head">@Model.Title</h1>
			</div>
			<!-- end title -->

			<!-- content -->
			<div class="col-12 col-xl-6">
				<div class="item item--details">
					<div class="row">
						<!-- card cover -->
						<div class="col-12 col-sm-5 col-md-5 col-lg-4 col-xl-6 col-xxl-5">
							<div class="item__cover">
								<img src="@Model.CoverImage" alt="@Model.Title">
								<span class="item__rate @(Model.Rating >= 8 ? "item__rate--green" : Model.Rating >= 6 ? "item__rate--yellow" : "item__rate--red")">@Model.Rating</span>
								@if (Context.Session.GetInt32("UserId").HasValue)
								{
									@* Logged-in users: use server-side form *@
									@if (ViewBag.IsInWatchlist)
									{
										<form asp-controller="Watchlist" asp-action="Remove" method="post" class="d-inline">
											<input type="hidden" name="movieId" value="@Model.Id" />
											<input type="hidden" name="returnUrl" value="@Context.Request.Path" />
											<button class="item__favorite item__favorite--static item__favorite--active" type="submit" title="@Localizer.GetString("Movie", "RemoveFromWatchlist")">
												<i class="ti ti-bookmark-filled"></i>
											</button>
										</form>
									}
									else
									{
										<form asp-controller="Watchlist" asp-action="Add" method="post" class="d-inline">
											<input type="hidden" name="movieId" value="@Model.Id" />
											<input type="hidden" name="returnUrl" value="@Context.Request.Path" />
											<button class="item__favorite item__favorite--static" type="submit" title="@Localizer.GetString("Movie", "AddToWatchlist")">
												<i class="ti ti-bookmark"></i>
											</button>
										</form>
									}
								}
								else
								{
									@* Anonymous users: use client-side JavaScript *@
									<button class="item__favorite item__favorite--static"
									        type="button"
									        title="@Localizer.GetString("Movie", "AddToWatchlist")"
									        data-id="@Model.Id"
									        data-type="series"
									        data-title="@Model.Title"
									        data-cover-image="@Model.CoverImage"
									        data-rating="@Model.Rating"
									        data-year="@Model.Year"
									        data-genre="@Model.Genre">
										<i class="ti ti-bookmark"></i>
									</button>
								}
							</div>
						</div>
						<!-- end card cover -->

						<!-- card content -->
						<div class="col-12 col-md-7 col-lg-8 col-xl-6 col-xxl-7">
							<div class="item__content">
								<ul class="item__meta">
									<li><span>@Localizer.GetString("TVSeries", "Creator"):</span> @Model.Creator</li>
									@if (Model.Actors.Any())
									{
										<li>
											<span>@Localizer.GetString("Movie", "Cast"):</span>
											@foreach (var actor in Model.Actors.Take(5))
											{
												<a href="#">@actor</a>
											}
											@if (Model.Actors.Count > 5)
											{
												<span>+@(Model.Actors.Count - 5) more</span>
											}
										</li>
									}
									<li><span>@Localizer.GetString("Movie", "Genre"):</span> <a href="#">@Model.Genre</a></li>
									<li><span>@Localizer.GetString("Year"):</span> @Model.Year</li>
									<li><span>@Localizer.GetString("TVSeries", "Seasons"):</span> @Model.Seasons</li>
									<li><span>@Localizer.GetString("TVSeries", "Episodes"):</span> @Model.TotalEpisodes</li>
									<li><span>@Localizer.GetString("Movie", "Country"):</span> <a href="#">@Model.Country</a></li>
									<li><span>@Localizer.GetString("Status"):</span> <span class="badge @(Model.Status == "Completed" ? "bg-success" : "bg-primary")">@Model.Status</span></li>
									<li><span>@Localizer.GetString("TVSeries", "FirstAired"):</span> @Model.FirstAired?.ToString("MMMM dd, yyyy")</li>
								</ul>

								<div class="item__description">
									<p>@Model.Description</p>
								</div>

							</div>
						</div>
						<!-- end card content -->
					</div>
				</div>
			</div>
			<!-- end content -->

			<!-- player -->
			<div class="col-12 col-xl-6">
				<div class="item__video">
					@{
						var posterImage = !string.IsNullOrEmpty(Model.PosterImage) ? Model.PosterImage : Model.CoverImage;
						var firstEpisode = Model.Episodes.OrderBy(e => e.SeasonNumber).ThenBy(e => e.EpisodeNumber).FirstOrDefault();
					}
					<video id="seriesPlayer" playsinline controls data-poster="@posterImage">
						@if (firstEpisode != null && !string.IsNullOrEmpty(firstEpisode.VideoUrl))
						{
							<source src="@firstEpisode.VideoUrl" type="video/mp4" size="1080">
						}
						else
						{
							<source src="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4" type="video/mp4" size="720">
							<source src="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4" type="video/mp4" size="1080">
						}
					</video>
				</div>
			</div>
			<!-- end player -->
		</div>
	</div>
	<!-- end details content -->

	<!-- Episodes Section -->
	<div class="container mt-5">
		<div class="row">
			<div class="col-12">
				<div class="section__title-wrap">
					<h2 class="section__title"><i class="ti ti-list"></i> Episodes</h2>
				</div>

				@if (seasons.Any())
				{
					<!-- Season Tabs -->
					<ul class="nav nav-tabs series-tabs mb-4" id="seasonTabs" role="tablist">
						@for (int i = 0; i < seasons.Count; i++)
						{
							var season = seasons[i];
							var isActive = i == 0 ? "active" : "";
							<li class="nav-item" role="presentation">
								<button class="nav-link @isActive" id="season-@season.Key-tab" data-bs-toggle="tab"
									data-bs-target="#season-@season.Key" type="button" role="tab">
									@Localizer.GetString("TVSeries", "Season") @season.Key
								</button>
							</li>
						}
					</ul>

					<!-- Season Tab Content -->
					<div class="tab-content" id="seasonTabsContent">
						@for (int i = 0; i < seasons.Count; i++)
						{
							var season = seasons[i];
							var isActive = i == 0 ? "show active" : "";
							<div class="tab-pane fade @isActive" id="season-@season.Key" role="tabpanel">
								<div class="episodes-list">
									@foreach (var episode in season.OrderBy(e => e.EpisodeNumber))
									{
										<div class="episode-card" data-video-url="@episode.VideoUrl" data-episode-title="@episode.Title">
											<div class="episode-number">
												<span>@episode.EpisodeNumber</span>
											</div>
											<div class="episode-content">
												<div class="episode-header">
													<h5 class="episode-title">@episode.EpisodeNumber. @episode.Title</h5>
													<span class="episode-duration">@episode.Duration @Localizer.GetString("Movie", "Minutes")</span>
												</div>
												<p class="episode-description">@episode.Description</p>
												<small class="episode-date"><i class="ti ti-calendar"></i> @episode.AirDate.ToString("MMM dd, yyyy")</small>
											</div>
											<div class="episode-action">
												<button class="btn-play-episode" title="@Localizer.GetString("TVSeries", "PlayEpisode")">
													<i class="ti ti-player-play-filled"></i>
												</button>
											</div>
										</div>
									}
								</div>
							</div>
						}
					</div>
				}
				else
				{
					<div class="alert alert-info">
						<i class="ti ti-info-circle"></i> No episodes available yet.
					</div>
				}
			</div>
		</div>
	</div>
	<!-- end Episodes Section -->
</section>
<!-- end details -->

<!-- content -->
<section class="content">
	<div class="content__head content__head--mt">
		<div class="container">
			<div class="row">
				<div class="col-12">
					<!-- content title -->
					<h2 class="content__title">@Localizer.GetString("Home", "Discover")</h2>
					<!-- end content title -->

					<!-- content tabs nav -->
					<ul class="nav nav-tabs content__tabs" id="content__tabs" role="tablist">
						<li class="nav-item" role="presentation">
							<button id="reviews-tab" class="active" data-bs-toggle="tab" data-bs-target="#tab-reviews" type="button" role="tab" aria-controls="tab-reviews" aria-selected="true">
								Reviews
								@if (ViewBag.ReviewCount > 0)
								{
									<span>(@ViewBag.ReviewCount)</span>
								}
							</button>
						</li>

						<li class="nav-item" role="presentation">
							<button id="info-tab" data-bs-toggle="tab" data-bs-target="#tab-info" type="button" role="tab" aria-controls="tab-info" aria-selected="false">@Localizer.GetString("Movie", "Information")</button>
						</li>
					</ul>
					<!-- end content tabs nav -->
				</div>
			</div>
		</div>
	</div>

	<div class="container">
		<div class="row">
			<div class="col-12 col-lg-8">
				<!-- content tabs -->
				<div class="tab-content">
					<!-- Reviews Tab -->
					<div class="tab-pane fade show active" id="tab-reviews" role="tabpanel" aria-labelledby="reviews-tab" tabindex="0">
						<div class="row">
							<!-- reviews -->
							<div class="col-12">
								@if (TempData["Success"] != null)
								{
									<div class="alert alert-success">@TempData["Success"]</div>
								}
								@if (TempData["Error"] != null)
								{
									<div class="alert alert-danger">@TempData["Error"]</div>
								}

								<!-- Add Review Form -->
								<form asp-action="AddReview" method="post" class="review-form">
									<input type="hidden" name="seriesId" value="@Model.Id" />
									<div class="review-form__group">
										<label for="userName" class="review-form__label">@Localizer.GetString("Movie", "YourName")</label>
										<input type="text" class="review-form__input" id="userName" name="userName" placeholder="@Localizer.GetString("Movie", "EnterYourName")" required>
									</div>
									<div class="review-form__group">
										<label for="rating" class="review-form__label">@Localizer.GetString("Rating")</label>
										<select class="review-form__select" id="rating" name="rating" required>
											<option value="">@Localizer.GetString("Movie", "SelectRating")</option>
											<option value="10">10 - @Localizer.GetString("Movie", "Masterpiece")</option>
											<option value="9">9 - @Localizer.GetString("Movie", "Excellent")</option>
											<option value="8">8 - @Localizer.GetString("Movie", "VeryGood")</option>
											<option value="7">7 - @Localizer.GetString("Movie", "Good")</option>
											<option value="6">6 - @Localizer.GetString("Movie", "AboveAverage")</option>
											<option value="5">5 - @Localizer.GetString("Movie", "Average")</option>
											<option value="4">4 - @Localizer.GetString("Movie", "BelowAverage")</option>
											<option value="3">3 - @Localizer.GetString("Movie", "Poor")</option>
											<option value="2">2 - @Localizer.GetString("Movie", "VeryPoor")</option>
											<option value="1">1 - @Localizer.GetString("Movie", "Terrible")</option>
										</select>
									</div>
									<div class="review-form__group">
										<label for="comment" class="review-form__label">@Localizer.GetString("Movie", "YourReview")</label>
										<textarea class="review-form__textarea" id="comment" name="comment" rows="5" placeholder="@Localizer.GetString("Movie", "WriteYourReview")" required></textarea>
									</div>
									<button type="submit" class="review-form__btn">
										<i class="ti ti-send"></i> Submit Review
									</button>
								</form>

								<!-- Display Reviews -->
								<div class="reviews">
									@if (ViewBag.ReviewCount > 0)
									{
										<div class="reviews__header">
											<h3 class="reviews__title">@Localizer.GetString("Movie", "UserReviews")</h3>
											<span class="reviews__stats">
												@Localizer.GetString("Movie", "AverageRating"): <span class="item__rate item__rate--small @(ViewBag.AverageRating >= 8 ? "item__rate--green" : ViewBag.AverageRating >= 6 ? "item__rate--yellow" : "item__rate--red")">
													@ViewBag.AverageRating.ToString("0.0")
												</span>
											</span>
										</div>
									}

									@if (ViewBag.Reviews != null && ViewBag.Reviews.Count > 0)
									{
										<ul class="reviews__list">
											@foreach (var review in ViewBag.Reviews)
											{
												<li class="reviews__item">
													<div class="reviews__autor">
														<img class="reviews__avatar" src="/img/user-placeholder.png" alt="@review.UserName" onerror="this.src='data:image/svg+xml,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2250%22 height=%2250%22%3E%3Crect fill=%22%232b2b3f%22 width=%2250%22 height=%2250%22/%3E%3Ctext fill=%22%23fff%22 font-size=%2220%22 x=%2250%25%22 y=%2250%25%22 text-anchor=%22middle%22 dy=%22.3em%22%3E@review.UserName.Substring(0, 1).ToUpper()%3C/text%3E%3C/svg%3E'">
														<div>
															<span class="reviews__name">@review.UserName</span>
															<span class="reviews__time">@review.CreatedAt.ToString("MMMM dd, yyyy")</span>
														</div>
														<span class="item__rate item__rate--small @(review.Rating >= 7 ? "item__rate--green" : review.Rating >= 5 ? "item__rate--yellow" : "item__rate--red")">
															@review.Rating
														</span>
													</div>
													<p class="reviews__text">@review.Comment</p>
												</li>
											}
										</ul>
									}
									else
									{
										<div class="reviews__empty">
											<i class="ti ti-message-off"></i>
											<p>@Localizer.GetString("TVSeries", "NoSeriesYet")</p>
										</div>
									}
								</div>
							</div>
							<!-- end reviews -->
						</div>
					</div>
					<!-- end Reviews Tab -->

					<!-- Information Tab -->
					<div class="tab-pane fade" id="tab-info" role="tabpanel" aria-labelledby="info-tab" tabindex="0">
						<div class="row">
							<div class="col-12">
								<div class="info-list">
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("Movie", "Title"):</span>
										<span class="info-list__value">@Model.Title</span>
									</div>
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("TVSeries", "Creator"):</span>
										<span class="info-list__value">@Model.Creator</span>
									</div>
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("Movie", "Genre"):</span>
										<span class="info-list__value">@Model.Genre</span>
									</div>
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("Year"):</span>
										<span class="info-list__value">@Model.Year</span>
									</div>
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("Movie", "Country"):</span>
										<span class="info-list__value">@Model.Country</span>
									</div>
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("TVSeries", "Seasons"):</span>
										<span class="info-list__value">@Model.Seasons</span>
									</div>
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("TVSeries", "Episodes"):</span>
										<span class="info-list__value">@Model.TotalEpisodes</span>
									</div>
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("Status"):</span>
										<span class="info-list__value"><span class="badge @(Model.Status == "Completed" ? "bg-success" : "bg-primary")">@Model.Status</span></span>
									</div>
									<div class="info-list__item">
										<span class="info-list__label">@Localizer.GetString("TVSeries", "FirstAired"):</span>
										<span class="info-list__value">@Model.FirstAired?.ToString("MMMM dd, yyyy")</span>
									</div>
									@if (Model.Actors.Any())
									{
										<div class="info-list__item">
											<span class="info-list__label">@Localizer.GetString("Movie", "Cast"):</span>
											<span class="info-list__value">@string.Join(", ", Model.Actors)</span>
										</div>
									}
									<div class="info-list__item info-list__item--full">
										<span class="info-list__label">@Localizer.GetString("Movie", "Description"):</span>
										<span class="info-list__value">@Model.Description</span>
									</div>
								</div>
							</div>
						</div>
					</div>
					<!-- end Information Tab -->
				</div>
				<!-- end content tabs -->
			</div>

			<!-- sidebar -->
			<div class="col-12 col-lg-4">
				<div class="sidebar">
					<!-- You may also like -->
					<div class="sidebar__item">
						<h3 class="sidebar__title">@Localizer.GetString("Movie", "YouMayAlsoLike")</h3>
						<div class="row">
							@{
								var similarSeries = ViewBag.SimilarSeries as List<MovizoneApp.Models.TVSeries>;
								if (similarSeries != null && similarSeries.Any())
								{
									foreach (var similarShow in similarSeries.Take(6))
									{
										<div class="col-6 col-sm-4 col-lg-6">
											<div class="item">
												<div class="item__cover">
													<img src="@similarShow.CoverImage" alt="@similarShow.Title">
													<a asp-action="Details" asp-route-id="@similarShow.Id" class="item__play">
														<i class="ti ti-player-play-filled"></i>
													</a>
													<span class="item__rate @(similarShow.Rating >= 8 ? "item__rate--green" : similarShow.Rating >= 6 ? "item__rate--yellow" : "item__rate--red")">@similarShow.Rating</span>
													<button class="item__favorite"
													        type="button"
													        title="@Localizer.GetString("Movie", "AddToWatchlist")"
													        data-id="@similarShow.Id"
													        data-type="series"
													        data-title="@similarShow.Title"
													        data-cover-image="@similarShow.CoverImage"
													        data-rating="@similarShow.Rating"
													        data-year="@similarShow.Year"
													        data-genre="@similarShow.Genre">
														<i class="ti ti-bookmark"></i>
													</button>
												</div>
												<div class="item__content">
													<h3 class="item__title"><a asp-action="Details" asp-route-id="@similarShow.Id">@similarShow.Title</a></h3>
													<span class="item__category">
														@foreach (var genre in similarShow.Genre.Split(',').Take(2))
														{
															<a href="#">@genre.Trim()</a>
														}
													</span>
												</div>
											</div>
										</div>
									}
								}
							}
						</div>
					</div>
					<!-- end You may also like -->
				</div>
			</div>
			<!-- end sidebar -->
		</div>
	</div>
</section>
<!-- end content -->

@section Scripts {
	<script>
		// Initialize Plyr for TV Series
		document.addEventListener('DOMContentLoaded', function() {
			let seriesPlayer = new Plyr('#seriesPlayer', {
				controls: ['play-large', 'play', 'progress', 'current-time', 'duration', 'mute', 'volume', 'settings', 'pip', 'airplay', 'fullscreen'],
				settings: ['quality', 'speed'],
				speed: { selected: 1, options: [0.5, 0.75, 1, 1.25, 1.5, 2] },
				quality: {
					default: 720,
					options: [1080, 720]
				},
				ratio: '16:9',
				clickToPlay: true,
				keyboard: { focused: true, global: true }
			});

			// Handle episode click
			document.querySelectorAll('.episode-card').forEach(function(card) {
				card.querySelector('.btn-play-episode').addEventListener('click', function() {
					const videoUrl = card.getAttribute('data-video-url');
					const episodeTitle = card.getAttribute('data-episode-title');

					// Update video source
					seriesPlayer.source = {
						type: 'video',
						sources: [{
							src: videoUrl,
							type: 'video/mp4',
							size: 1080
						}]
					};

					// Scroll to player
					document.getElementById('seriesPlayer').scrollIntoView({ behavior: 'smooth', block: 'center' });

					// Play the video
					setTimeout(function() {
						seriesPlayer.play();
					}, 300);

					// Highlight selected episode
					document.querySelectorAll('.episode-card').forEach(function(c) {
						c.classList.remove('episode-card--active');
					});
					card.classList.add('episode-card--active');
				});
			});
		});
	</script>
}
